# Azure Key Vault
    resource "azurerm_key_vault" "example" {
    name                        = "examplekeyvault"
    location                    = azurerm_resource_group.example.location
    resource_group_name         = azurerm_resource_group.example.name
    enabled_for_disk_encryption = true
    tenant_id                   = data.azurerm_client_config.current.tenant_id
    soft_delete_retention_days  = 7
    purge_protection_enabled    = false

    sku_name = "standard"

    access_policy {
        tenant_id = data.azurerm_client_config.current.tenant_id
        object_id = data.azurerm_client_config.current.object_id

        key_permissions = [
        "Get",
        ]

        secret_permissions = [
        "Get",
        ]

        storage_permissions = [
        "Get",
        ]
    }
    }

    data "azurerm_key_vault" "example" {
    name                = "mykeyvault"
    resource_group_name = "some-resource-group"
    }

    output "vault_uri" {
    value = data.azurerm_key_vault.example.vault_uri
    }


# Azure Key Vault Key
    resource "azurerm_key_vault_key" "generated" {
    name         = "generated-certificate"
    key_vault_id = azurerm_key_vault.example.id
    key_type     = "RSA"
    key_size     = 2048

    key_opts = [
        "decrypt",
        "encrypt",
        "sign",
        "unwrapKey",
        "verify",
        "wrapKey",
    ]
    }

    data "azurerm_key_vault_key" "example" {
    name         = "secret-sauce"
    key_vault_id = data.azurerm_key_vault.existing.id
    }

    output "key_type" {
    value = data.azurerm_key_vault_key.example.key_type
    }

# Azure Container Group
    resource "azurerm_container_group" "example" {
    name                = "example-continst"
    location            = azurerm_resource_group.example.location
    resource_group_name = azurerm_resource_group.example.name
    ip_address_type     = "public"
    dns_name_label      = "aci-label"
    os_type             = "Linux"

    container {
        name   = "hello-world"
        image  = "microsoft/aci-helloworld:latest"
        cpu    = "0.5"
        memory = "1.5"

        ports {
        port     = 443
        protocol = "TCP"
        }
    }

    container {
        name   = "sidecar"
        image  = "microsoft/aci-tutorial-sidecar"
        cpu    = "0.5"
        memory = "1.5"
    }

    tags = {
        environment = "testing"
    }
    }

# Azure Kubernetes Cluster
    resource "azurerm_kubernetes_cluster" "example" {
    name                = "example-aks1"
    location            = azurerm_resource_group.example.location
    resource_group_name = azurerm_resource_group.example.name
    dns_prefix          = "exampleaks1"

    default_node_pool {
        name       = "default"
        node_count = 1
        vm_size    = "Standard_D2_v2"
    }

    identity {
        type = "SystemAssigned"
    }

    tags = {
        Environment = "Production"
    }
    }

    output "client_certificate" {
    value = azurerm_kubernetes_cluster.example.kube_config.0.client_certificate
    }

    output "kube_config" {
    value = azurerm_kubernetes_cluster.example.kube_config_raw

    sensitive = true
    }
# 